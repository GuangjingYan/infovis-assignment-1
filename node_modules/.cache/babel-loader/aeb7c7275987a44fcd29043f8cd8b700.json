{"ast":null,"code":"var _jsxFileName = \"/Users/yanguangjing/Downloads/snu-infovis-assn-1-skeleton-master 2/src/components/Mainplot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mainplot = props => {\n  _s();\n\n  const splotSvg = useRef(null);\n  const barplotSvg = useRef(null);\n  const svgSize = props.margin * 2 + props.size; // data mean & deviation\n\n  const dataMean = [d3.mean(props.data.map(d => parseFloat(d[0]))), d3.mean(props.data.map(d => parseFloat(d[1])))];\n  const dataDev = [d3.deviation(props.data.map(d => parseFloat(d[0]))), d3.deviation(props.data.map(d => parseFloat(d[1])))]; //barColor\n\n  const barColor = [\"#fff1ac\", \"#d5a4cf\"];\n  let barSvg, ySvg, lineSvg; //dino plot\n\n  useEffect(() => {\n    //dataset\n    let datasetX = props.data.map(d => parseFloat(d[0]));\n    let datasetY = props.data.map(d => parseFloat(d[1])); //define axisX\n\n    let linearX = d3.scaleLinear().domain([d3.min(datasetX), d3.max(datasetX)]).range([0, props.size]);\n    let axisX = d3.axisBottom(linearX); //define axisY\n\n    let linearY = d3.scaleLinear().domain([d3.min(datasetY), d3.max(datasetY)]).range([props.size, 0]);\n    let axisY = d3.axisLeft(linearY); //append axisX\n\n    const svg = d3.select(splotSvg.current);\n    svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`).call(axisX); //append axisY\n\n    svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`).call(axisY); //append dot\n\n    const dotSvg = svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`);\n    dotSvg.selectAll(\"circle\").data(props.data).enter().append(\"circle\").attr(\"class\", (_, i) => `circle${i}`).attr(\"r\", props.radius).attr(\"cx\", d => linearX(d[0])).attr(\"cy\", d => linearY(d[1])); //append brush\n\n    const brush = d3.brush().extent([[0, 0], [props.size, props.size]]).on(\"start brush end\", brushed); //.on(\"start\", cleared);\n\n    const brushSvg = svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`).call(brush); // function cleared(){\n    // \td3.selectAll(\"circle\").attr(\"fill\",\"black\");\n    // }\n\n    function brushed(event) {\n      let selection = event.selection; // brush none dot\n\n      if (selection == null) {\n        d3.selectAll(\"circle\").attr(\"fill\", \"black\");\n        barUpdate(dataMean, dataDev);\n        return;\n      }\n\n      let [[x0, y0], [x1, y1]] = selection; //in section\n\n      const databrushed = props.data.map((d, i) => {\n        const dataTX = linearX(parseFloat(d[0]));\n        const dataTY = linearY(parseFloat(d[1]));\n        if (x0 <= dataTX && dataTX <= x1 && y0 <= dataTY && dataTY <= y1) return true;else return false;\n      });\n      const inSectionId = databrushed.reduce((acc, cur, i) => {\n        if (cur) acc.push(i);\n        return acc;\n      }, []);\n      d3.selectAll(\"circle\").attr(\"fill\", \"black\"); // set section color\n\n      inSectionId.forEach(e => {\n        d3.selectAll(`.circle${e}`).attr(\"fill\", \"red\");\n      }); // brush update\n\n      if (inSectionId.length === 0 || inSectionId.length === 1) {\n        barUpdate(dataMean, dataDev);\n      } else {\n        const sectionDataMean = [d3.mean(inSectionId.map(id => parseFloat(props.data[id][0]))), d3.mean(inSectionId.map(id => parseFloat(props.data[id][1])))];\n        const sectionDataDev = [d3.deviation(inSectionId.map(i => parseFloat(props.data[i][0]))), d3.deviation(inSectionId.map(i => parseFloat(props.data[i][1])))];\n        barUpdate(sectionDataMean, sectionDataDev);\n      }\n    } // eslint-disable-next-line\n\n  }, []); //bar plot\n\n  useEffect(() => {\n    //define axisX\n    const xScale = d3.scaleBand().domain([0, 1]).range([0, props.size]).align(0.5).padding(props.barPadding);\n    const tickText = d3.scaleBand().domain([\"x\", \"y\"]).range([0, props.size]).align(0.5).padding(props.barPadding);\n    let axisX = d3.axisBottom(tickText); //define axisY\n\n    const yMax = d3.max([dataMean[0], dataMean[1]]);\n    const yScale = d3.scaleLinear().domain([0, yMax]).range([props.size, 0]);\n    let axisY = d3.axisLeft(yScale); //append axisX\n\n    const svg = d3.select(barplotSvg.current);\n    const xSvg = svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`).call(axisX); //append axisY\n\n    ySvg = svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`).call(axisY); //append bar\n\n    barSvg = svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`);\n    barSvg.selectAll(\"rect\").data(dataMean).enter().append(\"rect\").attr(\"width\", xScale.bandwidth()).attr(\"height\", d => props.size - yScale(d)).attr(\"x\", (_, i) => xScale(i)).attr(\"y\", (d, _) => yScale(d)).attr(\"fill\", (_, i) => barColor[i]); //append errorbar\n\n    lineSvg = svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`);\n    lineSvg.selectAll(\"line\").data(dataDev).enter().append(\"line\").style(\"stroke\", \"black\").attr(\"x1\", (d, i) => xScale(i) + xScale.bandwidth() / 2).attr(\"x2\", (d, i) => xScale(i) + xScale.bandwidth() / 2).attr(\"y1\", (d, i) => yScale(dataMean[i] + d)).attr(\"y2\", (d, i) => yScale(dataMean[i] - d));\n  }, []); // update barplot\n\n  function barUpdate(updateMean, updateDev) {\n    //define axisY\n    const yMax = d3.max(updateMean);\n    const yScale = d3.scaleLinear().domain([0, yMax]).range([props.size, 0]);\n    let axisY = d3.axisLeft(yScale); //append axisY\n\n    ySvg.call(axisY);\n    barSvg.selectAll(\"rect\").data(updateMean).join().transition().duration(10).attr(\"y\", d => yScale(d)).attr(\"height\", d => {\n      return props.size - yScale(d);\n    });\n    lineSvg.selectAll(\"line\").data(updateDev).join().transition().duration(60).style(\"stroke\", \"black\").attr(\"y1\", (d, i) => yScale(updateMean[i] + d)).attr(\"y2\", (d, i) => yScale(updateMean[i] - d));\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: splotSvg,\n      width: svgSize,\n      height: svgSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: barplotSvg,\n      width: svgSize,\n      height: svgSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Mainplot, \"gVqVbQICJLzbwptZdq7jglYFjfg=\");\n\n_c = Mainplot;\nexport default Mainplot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainplot\");","map":{"version":3,"sources":["/Users/yanguangjing/Downloads/snu-infovis-assn-1-skeleton-master 2/src/components/Mainplot.js"],"names":["React","useRef","useEffect","d3","Mainplot","props","splotSvg","barplotSvg","svgSize","margin","size","dataMean","mean","data","map","d","parseFloat","dataDev","deviation","barColor","barSvg","ySvg","lineSvg","datasetX","datasetY","linearX","scaleLinear","domain","min","max","range","axisX","axisBottom","linearY","axisY","axisLeft","svg","select","current","append","attr","call","dotSvg","selectAll","enter","_","i","radius","brush","extent","on","brushed","brushSvg","event","selection","barUpdate","x0","y0","x1","y1","databrushed","dataTX","dataTY","inSectionId","reduce","acc","cur","push","forEach","e","length","sectionDataMean","id","sectionDataDev","xScale","scaleBand","align","padding","barPadding","tickText","yMax","yScale","xSvg","bandwidth","style","updateMean","updateDev","join","transition","duration"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect} from \"react\";\nimport * as d3 from \"d3\";\n\n\n\nconst Mainplot = (props) => {\n\n\tconst splotSvg = useRef(null);\n  const barplotSvg = useRef(null);\n  const svgSize = props.margin * 2 + props.size;\n\t// data mean & deviation\n\tconst dataMean = [d3.mean(props.data.map(d => parseFloat(d[0]))),d3.mean(props.data.map(d => parseFloat(d[1])))];\n\tconst dataDev = [d3.deviation(props.data.map(d => parseFloat(d[0]))),d3.deviation(props.data.map(d => parseFloat(d[1])))];\n\t//barColor\n\tconst barColor = [\"#fff1ac\",\"#d5a4cf\"];\n\n\tlet barSvg, ySvg, lineSvg;\n\n\t//dino plot\n\tuseEffect(() => {\n\t\t//dataset\n\t\tlet datasetX = props.data.map(d => parseFloat(d[0]));\n\t\tlet datasetY = props.data.map(d => parseFloat(d[1]));\n\n\t\t//define axisX\n\t\tlet linearX = d3.scaleLinear().domain([d3.min(datasetX), d3.max(datasetX)]).range([0, props.size]);\n\t\tlet axisX = d3.axisBottom(linearX);\n\n\t\t//define axisY\n\t\tlet linearY = d3.scaleLinear().domain([d3.min(datasetY), d3.max(datasetY)]).range([props.size, 0]);\n\t\tlet axisY = d3.axisLeft(linearY);\n\n\t\t//append axisX\n\t\tconst svg = d3.select(splotSvg.current);\n\t\tsvg.append(\"g\")\n\t \t\t .attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`)\n\t\t\t .call(axisX)\n\n\t\t//append axisY\n\t\tsvg.append(\"g\")\n\t\t\t .attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\t\t .call(axisY)\n\n\t\t//append dot\n\t\tconst dotSvg = svg.append(\"g\")\n\t\t\t\t\t\t\t\t\t\t\t.attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\tdotSvg.selectAll(\"circle\")\n\t\t\t\t\t.data(props.data)\n\t\t\t\t\t.enter()\n\t\t\t\t\t.append(\"circle\")\n\t\t\t\t\t.attr(\"class\", (_,i) => `circle${i}`)\n\t\t\t\t\t.attr(\"r\", props.radius)\n\t\t\t\t\t.attr(\"cx\", d => linearX(d[0]))\n\t\t\t\t\t.attr(\"cy\", d => linearY(d[1]))\n\n\n\t\t//append brush\n\t\tconst brush = d3.brush()\n      .extent([[0, 0], [props.size, props.size]])\n      .on(\"start brush end\", brushed)\n\t\t\t//.on(\"start\", cleared);\n\t\tconst brushSvg = svg.append(\"g\")\n\t\t\t\t\t\t\t\t\t\t\t\t.attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\t\t\t\t\t\t\t\t\t\t\t.call(brush)\n\n\t\t// function cleared(){\n\t\t// \td3.selectAll(\"circle\").attr(\"fill\",\"black\");\n\t\t// }\n\n\t\tfunction brushed(event) {\n    let selection = event.selection;\n\t\t\n\t\t// brush none dot\n    if (selection == null) {\n      d3.selectAll(\"circle\").attr(\"fill\", \"black\");\n\t\t\tbarUpdate(dataMean,dataDev);\n      return;\n    }\n\t\tlet [[x0, y0],[x1, y1]] = selection;\n\t\t//in section\n\t\tconst databrushed = props.data.map((d, i)=>{\n\t\t\tconst dataTX = linearX(parseFloat(d[0]));\n\t\t\tconst dataTY = linearY(parseFloat(d[1]));\n\t\t\tif(x0 <= dataTX && dataTX <= x1 && y0 <= dataTY && dataTY <= y1\n\t\t\t\t)return true;\n\t\t\telse return false;\t\n\t\t});\n\t\tconst inSectionId = databrushed.reduce((acc, cur, i) => {\n\t\t\tif (cur) acc.push(i);\n\t\t\treturn acc;\n\t\t}, [])\n\t\td3.selectAll(\"circle\").attr(\"fill\",\"black\");\n\t\t// set section color\n\t\tinSectionId.forEach(e =>{\n\t\t\td3.selectAll(`.circle${e}`)\n\t\t\t\t.attr(\"fill\",\"red\");\n\t\t} )\n\t\t// brush update\n\t\tif( inSectionId.length === 0 || inSectionId.length === 1){\n\t\t\tbarUpdate(dataMean,dataDev);\n\t\t}else\n\t\t{\n\t\t\tconst sectionDataMean = [d3.mean(inSectionId.map(id => parseFloat(props.data[id][0]))),d3.mean(inSectionId.map(id => parseFloat(props.data[id][1])))];\n\t\t\tconst sectionDataDev = [d3.deviation(inSectionId.map(i => parseFloat(props.data[i][0]))),d3.deviation(inSectionId.map(i => parseFloat(props.data[i][1])))];\n\t\t\tbarUpdate(sectionDataMean,sectionDataDev);\n\t\t}\n  }\n\t// eslint-disable-next-line\n\t}, []);\n\n\t//bar plot\n\tuseEffect(()=>{\n\t\t//define axisX\n\t\tconst xScale  = d3.scaleBand().domain([0, 1]).range([0, props.size]).align(0.5).padding(props.barPadding);\n\t\tconst tickText  = d3.scaleBand().domain([\"x\", \"y\"]).range([0, props.size]).align(0.5).padding(props.barPadding);\n\t\tlet axisX = d3.axisBottom(tickText);\n\n\t\t//define axisY\n\t\tconst yMax = d3.max([dataMean[0],dataMean[1]]);\n\t\tconst yScale  = d3.scaleLinear().domain([0, yMax]).range([props.size, 0]);\n\t\tlet axisY = d3.axisLeft(yScale);\n\n\t\t//append axisX\n\t\tconst svg = d3.select(barplotSvg.current);\n\t\tconst xSvg = svg.append(\"g\")\n\t \t\t .attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`)\n\t\t\t .call(axisX)\n\n\t\t//append axisY\n\t\tySvg = svg.append(\"g\")\n\t\t\t .attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\t\t .call(axisY)\n\n\t\t//append bar\n\t\tbarSvg = svg.append(\"g\")\n\t\t\t\t\t\t\t\t.attr(\"transform\", `translate(${props.margin},${props.margin})`);\n\n\t\tbarSvg.selectAll(\"rect\")\n\t\t\t\t\t.data(dataMean)\n\t\t\t\t\t.enter()\n\t\t\t\t\t.append(\"rect\")\n\t\t\t\t\t.attr(\"width\", xScale.bandwidth())\n          .attr(\"height\", d => props.size - yScale(d))\n\t\t\t\t\t.attr(\"x\", (_,i) => xScale(i))\n\t\t\t\t\t.attr(\"y\",(d,_) => yScale(d))\n\t\t\t\t\t.attr(\"fill\",(_,i)=>barColor[i])\n\n\t\t//append errorbar\n\t\tlineSvg = svg.append(\"g\")\n\t\t\t\t\t\t\t\t .attr(\"transform\", `translate(${props.margin},${props.margin})`);\n\t\t\n\t\tlineSvg.selectAll(\"line\")\n\t\t\t\t\t .data(dataDev)\n\t\t\t\t\t .enter()\n\t\t\t\t\t .append(\"line\")\n\t\t\t\t\t .style(\"stroke\",\"black\")\n\t\t\t\t\t .attr(\"x1\", (d, i) => xScale(i) + xScale.bandwidth() / 2)\n           .attr(\"x2\", (d, i) => xScale(i) + xScale.bandwidth() / 2)\n           .attr(\"y1\", (d, i) => yScale(dataMean[i] + d))\n           .attr(\"y2\", (d, i) => yScale(dataMean[i] - d))\n\n\t},[])\n\n\t// update barplot\n\tfunction barUpdate(updateMean, updateDev){\n\t\t//define axisY\n\t\tconst yMax = d3.max(updateMean);\n\t\tconst yScale = d3.scaleLinear().domain([0, yMax]).range([props.size, 0]);\n\t\tlet axisY = d3.axisLeft(yScale);\n\t\n\t\t//append axisY\n\t\tySvg.call(axisY)\n\t\t\n\t\tbarSvg.selectAll(\"rect\")\n\t\t\t\t\t.data(updateMean)\n\t\t\t\t\t.join()\n\t\t\t\t\t.transition()\n\t\t\t\t\t.duration(10)\n\t\t\t\t\t.attr(\"y\",d => yScale(d))\n\t\t\t\t\t.attr(\"height\",d => {\n\t\t\t\t\t\treturn props.size - yScale(d);});\n\n\t\tlineSvg.selectAll(\"line\")\n\t\t\t\t\t .data(updateDev)\n\t\t\t\t\t .join()\n\t\t\t\t\t .transition()\n\t\t\t\t\t .duration(60)\n\t\t\t\t\t .style(\"stroke\",\"black\")\n           .attr(\"y1\", (d, i) => yScale(updateMean[i] + d))\n           .attr(\"y2\", (d, i) => yScale(updateMean[i] - d))\n\t\t\t\n\t\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<svg ref={splotSvg} width={svgSize} height={svgSize}> \n\t\t\t</svg>\n      <svg ref={barplotSvg} width={svgSize} height={svgSize}> \n\t\t\t</svg>\n\n\t\t</div>\n\t)\n};\n\nexport default Mainplot;"]},"metadata":{},"sourceType":"module"}