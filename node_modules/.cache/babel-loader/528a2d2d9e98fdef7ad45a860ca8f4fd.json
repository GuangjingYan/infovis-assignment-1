{"ast":null,"code":"var _jsxFileName = \"/Users/yanguangjing/Downloads/snu-infovis-assn-1-skeleton-master 2/src/components/Mainplot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { scaleBand } from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mainplot = props => {\n  _s();\n\n  const splotSvg = useRef(null);\n  const barplotSvg = useRef(null);\n  const svgSize = props.margin * 2 + props.size; // TODO\n  //dino plot\n\n  useEffect(() => {\n    // TODO\n    //dataset\n    let datasetX = props.data.map(d => d[0]);\n    let datasetY = props.data.map(d => d[1]); //define axisX\n\n    let linearX = d3.scaleLinear().domain([d3.min(datasetX), d3.max(datasetX)]).range([0, props.size]);\n    let axisX = d3.axisBottom(linearX); //define axisY\n\n    let linearY = d3.scaleLinear().domain([d3.min(datasetY), d3.max(datasetY)]).range([props.size, 0]);\n    let axisY = d3.axisLeft(linearY); //append axisX\n\n    const svg = d3.select(splotSvg.current);\n    svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`).call(axisX); //append axisY\n\n    svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`).call(axisY); //append dot\n\n    const dotSvg = svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`);\n    dotSvg.selectAll(\"circle\").data(props.data).enter().append(\"circle\").attr(\"class\", (_, i) => `circle${i}`).attr(\"r\", props.radius).attr(\"cx\", d => linearX(d[0])).attr(\"cy\", d => linearY(d[1])); //append brush\n\n    const brush = d3.brush().extent([[0, 0], [props.size, props.size]]).on(\"start brush end\", brushed); //.on(\"start\", cleared);\n\n    const brushSvg = svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`).call(brush); // function cleared(){\n    // \td3.selectAll(\"circle\").attr(\"fill\",\"black\");\n    // }\n\n    function brushed(event) {\n      let selection = event.selection;\n      let [[x0, y0], [x1, y1]] = selection;\n      console.log(`x0:${x0},y0:${y0},x1:${x1},y1:${y1}`); // brush none dot\n\n      if (selection == null) {\n        d3.selectAll(\"circle\").attr(\"fill\", \"black\");\n        return;\n      } //in section\n\n\n      const databrushed = props.data.map((d, i) => {\n        const dataTX = linearX(parseFloat(d[0]));\n        const dataTY = linearY(parseFloat(d[1]));\n        if (x0 <= dataTX && dataTX <= x1 && y0 <= dataTY && dataTY <= y1) return true;else return false;\n      });\n      const inSectionId = databrushed.reduce((acc, cur, i) => {\n        if (cur) acc.push(i);\n        return acc;\n      }, []);\n      d3.selectAll(\"circle\").attr(\"fill\", \"black\");\n      inSectionId.forEach(e => {\n        d3.select(`.circle${e}`).attr(\"fill\", \"red\");\n      });\n    } // eslint-disable-next-line\n\n  }, []); //bar plot\n\n  useEffect(() => {\n    // data mean & deviation\n    const dataMean = [d3.mean(props.data.map(d => parseFloat(d[0]))), d3.mean(props.data.map(d => parseFloat(d[1])))];\n    const dataDev = [d3.deviation(props.data.map(d => parseFloat(d[0]))), d3.deviation(props.data.map(d => parseFloat(d[1])))]; //define axisX\n\n    const xScale = d3.scaleBand().domain([0, 1]).range([0, props.size]).align(0.5).padding(props.barPadding);\n    let axisX = d3.axisBottom(xScale); //define axisY\n\n    const yMax = d3.max([dataMean[0], dataDev[0]]);\n    const yScale = d3.scaleLinear().domain([0, yMax]).range([props.size, 0]);\n    let axisY = d3.axisLeft(yScale); //append axisX\n\n    const svg = d3.select(barplotSvg.current);\n    svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`).call(axisX); //append axisY\n\n    svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`).call(axisY); //append bar\n\n    const barSvg = svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`);\n    barSvg.selectAll(\"rect\").data(dataMean).enter().append(\"rect\").attr(\"width\", xScale.bandwidth()).attr(\"height\", d => props.size - yScale(d)).attr(\"x\", (_, i) => scaleBand(i)).attr(\"y\", (d, _) => yScale(d));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: splotSvg,\n      width: svgSize,\n      height: svgSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: barplotSvg,\n      width: svgSize,\n      height: svgSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Mainplot, \"gVqVbQICJLzbwptZdq7jglYFjfg=\");\n\n_c = Mainplot;\nexport default Mainplot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainplot\");","map":{"version":3,"sources":["/Users/yanguangjing/Downloads/snu-infovis-assn-1-skeleton-master 2/src/components/Mainplot.js"],"names":["React","useRef","useEffect","d3","scaleBand","Mainplot","props","splotSvg","barplotSvg","svgSize","margin","size","datasetX","data","map","d","datasetY","linearX","scaleLinear","domain","min","max","range","axisX","axisBottom","linearY","axisY","axisLeft","svg","select","current","append","attr","call","dotSvg","selectAll","enter","_","i","radius","brush","extent","on","brushed","brushSvg","event","selection","x0","y0","x1","y1","console","log","databrushed","dataTX","parseFloat","dataTY","inSectionId","reduce","acc","cur","push","forEach","e","dataMean","mean","dataDev","deviation","xScale","align","padding","barPadding","yMax","yScale","barSvg","bandwidth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,SAAT,QAA0B,IAA1B;;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;AACC,QAAMO,UAAU,GAAGP,MAAM,CAAC,IAAD,CAAzB;AACA,QAAMQ,OAAO,GAAGH,KAAK,CAACI,MAAN,GAAe,CAAf,GAAmBJ,KAAK,CAACK,IAAzC,CAJ0B,CAM1B;AAED;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACb;AAEF;AACA,QAAIU,QAAQ,GAAGN,KAAK,CAACO,IAAN,CAAWC,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAArB,CAAf;AACA,QAAIC,QAAQ,GAAGV,KAAK,CAACO,IAAN,CAAWC,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAArB,CAAf,CALe,CAOf;;AACA,QAAIE,OAAO,GAAGd,EAAE,CAACe,WAAH,GAAiBC,MAAjB,CAAwB,CAAChB,EAAE,CAACiB,GAAH,CAAOR,QAAP,CAAD,EAAmBT,EAAE,CAACkB,GAAH,CAAOT,QAAP,CAAnB,CAAxB,EAA8DU,KAA9D,CAAoE,CAAC,CAAD,EAAIhB,KAAK,CAACK,IAAV,CAApE,CAAd;AACA,QAAIY,KAAK,GAAGpB,EAAE,CAACqB,UAAH,CAAcP,OAAd,CAAZ,CATe,CAWf;;AACA,QAAIQ,OAAO,GAAGtB,EAAE,CAACe,WAAH,GAAiBC,MAAjB,CAAwB,CAAChB,EAAE,CAACiB,GAAH,CAAOJ,QAAP,CAAD,EAAmBb,EAAE,CAACkB,GAAH,CAAOL,QAAP,CAAnB,CAAxB,EAA8DM,KAA9D,CAAoE,CAAChB,KAAK,CAACK,IAAP,EAAa,CAAb,CAApE,CAAd;AACA,QAAIe,KAAK,GAAGvB,EAAE,CAACwB,QAAH,CAAYF,OAAZ,CAAZ,CAbe,CAef;;AACA,UAAMG,GAAG,GAAGzB,EAAE,CAAC0B,MAAH,CAAUtB,QAAQ,CAACuB,OAAnB,CAAZ;AACAF,IAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EACIC,IADJ,CACS,WADT,EACuB,aAAY1B,KAAK,CAACI,MAAO,IAAGJ,KAAK,CAACK,IAAN,GAAaL,KAAK,CAACI,MAAO,GAD7E,EAEGuB,IAFH,CAEQV,KAFR,EAjBe,CAqBf;;AACAK,IAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EACGC,IADH,CACQ,WADR,EACsB,aAAY1B,KAAK,CAACI,MAAO,IAAGJ,KAAK,CAACI,MAAO,GAD/D,EAEGuB,IAFH,CAEQP,KAFR,EAtBe,CA0Bf;;AACA,UAAMQ,MAAM,GAAGN,GAAG,CAACG,MAAJ,CAAW,GAAX,EACLC,IADK,CACA,WADA,EACc,aAAY1B,KAAK,CAACI,MAAO,IAAGJ,KAAK,CAACI,MAAO,GADvD,CAAf;AAEAwB,IAAAA,MAAM,CAACC,SAAP,CAAiB,QAAjB,EACItB,IADJ,CACSP,KAAK,CAACO,IADf,EAEIuB,KAFJ,GAGIL,MAHJ,CAGW,QAHX,EAIIC,IAJJ,CAIS,OAJT,EAIkB,CAACK,CAAD,EAAGC,CAAH,KAAU,SAAQA,CAAE,EAJtC,EAKIN,IALJ,CAKS,GALT,EAKc1B,KAAK,CAACiC,MALpB,EAMIP,IANJ,CAMS,IANT,EAMejB,CAAC,IAAIE,OAAO,CAACF,CAAC,CAAC,CAAD,CAAF,CAN3B,EAOIiB,IAPJ,CAOS,IAPT,EAOejB,CAAC,IAAIU,OAAO,CAACV,CAAC,CAAC,CAAD,CAAF,CAP3B,EA7Be,CAuCf;;AACA,UAAMyB,KAAK,GAAGrC,EAAE,CAACqC,KAAH,GACTC,MADS,CACF,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAACnC,KAAK,CAACK,IAAP,EAAaL,KAAK,CAACK,IAAnB,CAAT,CADE,EAET+B,EAFS,CAEN,iBAFM,EAEaC,OAFb,CAAd,CAxCe,CA2Cd;;AACD,UAAMC,QAAQ,GAAGhB,GAAG,CAACG,MAAJ,CAAW,GAAX,EACNC,IADM,CACD,WADC,EACa,aAAY1B,KAAK,CAACI,MAAO,IAAGJ,KAAK,CAACI,MAAO,GADtD,EAENuB,IAFM,CAEDO,KAFC,CAAjB,CA5Ce,CAgDf;AACA;AACA;;AAGA,aAASG,OAAT,CAAiBE,KAAjB,EAAwB;AACtB,UAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;AACF,UAAI,CAAC,CAACC,EAAD,EAAKC,EAAL,CAAD,EAAU,CAACC,EAAD,EAAKC,EAAL,CAAV,IAAsBJ,SAA1B;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAa,MAAKL,EAAG,OAAMC,EAAG,OAAMC,EAAG,OAAMC,EAAG,EAAhD,EAHwB,CAIxB;;AACE,UAAIJ,SAAS,IAAI,IAAjB,EAAuB;AACrB3C,QAAAA,EAAE,CAACgC,SAAH,CAAa,QAAb,EAAuBH,IAAvB,CAA4B,MAA5B,EAAoC,OAApC;AACA;AACD,OARqB,CASxB;;;AACA,YAAMqB,WAAW,GAAG/C,KAAK,CAACO,IAAN,CAAWC,GAAX,CAAe,CAACC,CAAD,EAAIuB,CAAJ,KAAQ;AAC1C,cAAMgB,MAAM,GAAGrC,OAAO,CAACsC,UAAU,CAACxC,CAAC,CAAC,CAAD,CAAF,CAAX,CAAtB;AACA,cAAMyC,MAAM,GAAG/B,OAAO,CAAC8B,UAAU,CAACxC,CAAC,CAAC,CAAD,CAAF,CAAX,CAAtB;AACA,YAAGgC,EAAE,IAAIO,MAAN,IAAgBA,MAAM,IAAIL,EAA1B,IAAgCD,EAAE,IAAIQ,MAAtC,IAAgDA,MAAM,IAAIN,EAA7D,EACE,OAAO,IAAP,CADF,KAEK,OAAO,KAAP;AACL,OANmB,CAApB;AAOA,YAAMO,WAAW,GAAGJ,WAAW,CAACK,MAAZ,CAAmB,CAACC,GAAD,EAAMC,GAAN,EAAWtB,CAAX,KAAiB;AACvD,YAAIsB,GAAJ,EAASD,GAAG,CAACE,IAAJ,CAASvB,CAAT;AACT,eAAOqB,GAAP;AACA,OAHmB,EAGjB,EAHiB,CAApB;AAIAxD,MAAAA,EAAE,CAACgC,SAAH,CAAa,QAAb,EAAuBH,IAAvB,CAA4B,MAA5B,EAAmC,OAAnC;AAEAyB,MAAAA,WAAW,CAACK,OAAZ,CAAoBC,CAAC,IAAG;AACvB5D,QAAAA,EAAE,CAAC0B,MAAH,CAAW,UAASkC,CAAE,EAAtB,EACE/B,IADF,CACO,MADP,EACc,KADd;AAEA,OAHD;AAIC,KAhFc,CAmFhB;;AACC,GApFQ,EAoFN,EApFM,CAAT,CAT2B,CA+F3B;;AACA9B,EAAAA,SAAS,CAAC,MAAI;AACb;AACA,UAAM8D,QAAQ,GAAG,CAAC7D,EAAE,CAAC8D,IAAH,CAAQ3D,KAAK,CAACO,IAAN,CAAWC,GAAX,CAAeC,CAAC,IAAIwC,UAAU,CAACxC,CAAC,CAAC,CAAD,CAAF,CAA9B,CAAR,CAAD,EAAgDZ,EAAE,CAAC8D,IAAH,CAAQ3D,KAAK,CAACO,IAAN,CAAWC,GAAX,CAAeC,CAAC,IAAIwC,UAAU,CAACxC,CAAC,CAAC,CAAD,CAAF,CAA9B,CAAR,CAAhD,CAAjB;AACA,UAAMmD,OAAO,GAAG,CAAC/D,EAAE,CAACgE,SAAH,CAAa7D,KAAK,CAACO,IAAN,CAAWC,GAAX,CAAeC,CAAC,IAAIwC,UAAU,CAACxC,CAAC,CAAC,CAAD,CAAF,CAA9B,CAAb,CAAD,EAAqDZ,EAAE,CAACgE,SAAH,CAAa7D,KAAK,CAACO,IAAN,CAAWC,GAAX,CAAeC,CAAC,IAAIwC,UAAU,CAACxC,CAAC,CAAC,CAAD,CAAF,CAA9B,CAAb,CAArD,CAAhB,CAHa,CAKb;;AACA,UAAMqD,MAAM,GAAIjE,EAAE,CAACC,SAAH,GAAee,MAAf,CAAsB,CAAC,CAAD,EAAI,CAAJ,CAAtB,EAA8BG,KAA9B,CAAoC,CAAC,CAAD,EAAIhB,KAAK,CAACK,IAAV,CAApC,EAAqD0D,KAArD,CAA2D,GAA3D,EAAgEC,OAAhE,CAAwEhE,KAAK,CAACiE,UAA9E,CAAhB;AACA,QAAIhD,KAAK,GAAGpB,EAAE,CAACqB,UAAH,CAAc4C,MAAd,CAAZ,CAPa,CASb;;AACA,UAAMI,IAAI,GAAGrE,EAAE,CAACkB,GAAH,CAAO,CAAC2C,QAAQ,CAAC,CAAD,CAAT,EAAaE,OAAO,CAAC,CAAD,CAApB,CAAP,CAAb;AACA,UAAMO,MAAM,GAAItE,EAAE,CAACe,WAAH,GAAiBC,MAAjB,CAAwB,CAAC,CAAD,EAAIqD,IAAJ,CAAxB,EAAmClD,KAAnC,CAAyC,CAAChB,KAAK,CAACK,IAAP,EAAa,CAAb,CAAzC,CAAhB;AACA,QAAIe,KAAK,GAAGvB,EAAE,CAACwB,QAAH,CAAY8C,MAAZ,CAAZ,CAZa,CAcb;;AACA,UAAM7C,GAAG,GAAGzB,EAAE,CAAC0B,MAAH,CAAUrB,UAAU,CAACsB,OAArB,CAAZ;AACAF,IAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EACIC,IADJ,CACS,WADT,EACuB,aAAY1B,KAAK,CAACI,MAAO,IAAGJ,KAAK,CAACK,IAAN,GAAaL,KAAK,CAACI,MAAO,GAD7E,EAEGuB,IAFH,CAEQV,KAFR,EAhBa,CAoBb;;AACAK,IAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EACGC,IADH,CACQ,WADR,EACsB,aAAY1B,KAAK,CAACI,MAAO,IAAGJ,KAAK,CAACI,MAAO,GAD/D,EAEGuB,IAFH,CAEQP,KAFR,EArBa,CAyBb;;AACA,UAAMgD,MAAM,GAAG9C,GAAG,CAACG,MAAJ,CAAW,GAAX,EACLC,IADK,CACA,WADA,EACc,aAAY1B,KAAK,CAACI,MAAO,IAAGJ,KAAK,CAACI,MAAO,GADvD,CAAf;AAGAgE,IAAAA,MAAM,CAACvC,SAAP,CAAiB,MAAjB,EACItB,IADJ,CACSmD,QADT,EAEI5B,KAFJ,GAGIL,MAHJ,CAGW,MAHX,EAIIC,IAJJ,CAIS,OAJT,EAIkBoC,MAAM,CAACO,SAAP,EAJlB,EAKS3C,IALT,CAKc,QALd,EAKwBjB,CAAC,IAAIT,KAAK,CAACK,IAAN,GAAa8D,MAAM,CAAC1D,CAAD,CALhD,EAMIiB,IANJ,CAMS,GANT,EAMc,CAACK,CAAD,EAAGC,CAAH,KAASlC,SAAS,CAACkC,CAAD,CANhC,EAOIN,IAPJ,CAOS,GAPT,EAOa,CAACjB,CAAD,EAAGsB,CAAH,KAASoC,MAAM,CAAC1D,CAAD,CAP5B;AAQA,GArCQ,EAqCP,EArCO,CAAT;AAuCA,sBACC;AAAA,4BACC;AAAK,MAAA,GAAG,EAAER,QAAV;AAAoB,MAAA,KAAK,EAAEE,OAA3B;AAAoC,MAAA,MAAM,EAAEA;AAA5C;AAAA;AAAA;AAAA;AAAA,YADD,eAGI;AAAK,MAAA,GAAG,EAAED,UAAV;AAAsB,MAAA,KAAK,EAAEC,OAA7B;AAAsC,MAAA,MAAM,EAAEA;AAA9C;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CAhJD;;GAAMJ,Q;;KAAAA,Q;AAkJN,eAAeA,QAAf","sourcesContent":["import React, { useRef, useEffect} from \"react\";\nimport * as d3 from \"d3\";\nimport { scaleBand } from \"d3\";\n\n\n\nconst Mainplot = (props) => {\n\n\tconst splotSvg = useRef(null);\n  const barplotSvg = useRef(null);\n  const svgSize = props.margin * 2 + props.size;\n\n  // TODO\n\n\t//dino plot\n\tuseEffect(() => {\n    // TODO\n\n\t\t//dataset\n\t\tlet datasetX = props.data.map(d => d[0]);\n\t\tlet datasetY = props.data.map(d => d[1]);\n\n\t\t//define axisX\n\t\tlet linearX = d3.scaleLinear().domain([d3.min(datasetX), d3.max(datasetX)]).range([0, props.size]);\n\t\tlet axisX = d3.axisBottom(linearX);\n\n\t\t//define axisY\n\t\tlet linearY = d3.scaleLinear().domain([d3.min(datasetY), d3.max(datasetY)]).range([props.size, 0]);\n\t\tlet axisY = d3.axisLeft(linearY);\n\n\t\t//append axisX\n\t\tconst svg = d3.select(splotSvg.current);\n\t\tsvg.append(\"g\")\n\t \t\t .attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`)\n\t\t\t .call(axisX)\n\n\t\t//append axisY\n\t\tsvg.append(\"g\")\n\t\t\t .attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\t\t .call(axisY)\n\n\t\t//append dot\n\t\tconst dotSvg = svg.append(\"g\")\n\t\t\t\t\t\t\t\t\t\t\t.attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\tdotSvg.selectAll(\"circle\")\n\t\t\t\t\t.data(props.data)\n\t\t\t\t\t.enter()\n\t\t\t\t\t.append(\"circle\")\n\t\t\t\t\t.attr(\"class\", (_,i) => `circle${i}`)\n\t\t\t\t\t.attr(\"r\", props.radius)\n\t\t\t\t\t.attr(\"cx\", d => linearX(d[0]))\n\t\t\t\t\t.attr(\"cy\", d => linearY(d[1]))\n\n\n\t\t//append brush\n\t\tconst brush = d3.brush()\n      .extent([[0, 0], [props.size, props.size]])\n      .on(\"start brush end\", brushed)\n\t\t\t//.on(\"start\", cleared);\n\t\tconst brushSvg = svg.append(\"g\")\n\t\t\t\t\t\t\t\t\t\t\t\t.attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\t\t\t\t\t\t\t\t\t\t\t.call(brush)\n\n\t\t// function cleared(){\n\t\t// \td3.selectAll(\"circle\").attr(\"fill\",\"black\");\n\t\t// }\n\n\n\t\tfunction brushed(event) {\n    let selection = event.selection;\n\t\tlet [[x0, y0],[x1, y1]] = selection;\n\t\tconsole.log(`x0:${x0},y0:${y0},x1:${x1},y1:${y1}`)\n\t\t// brush none dot\n    if (selection == null) {\n      d3.selectAll(\"circle\").attr(\"fill\", \"black\");\n      return;\n    }\n\t\t//in section\n\t\tconst databrushed = props.data.map((d, i)=>{\n\t\t\tconst dataTX = linearX(parseFloat(d[0]));\n\t\t\tconst dataTY = linearY(parseFloat(d[1]));\n\t\t\tif(x0 <= dataTX && dataTX <= x1 && y0 <= dataTY && dataTY <= y1\n\t\t\t\t)return true;\n\t\t\telse return false;\t\n\t\t});\n\t\tconst inSectionId = databrushed.reduce((acc, cur, i) => {\n\t\t\tif (cur) acc.push(i);\n\t\t\treturn acc;\n\t\t}, [])\n\t\td3.selectAll(\"circle\").attr(\"fill\",\"black\");\n\t\n\t\tinSectionId.forEach(e =>{\n\t\t\td3.select(`.circle${e}`)\n\t\t\t\t.attr(\"fill\",\"red\");\n\t\t} )\n  }\n\t\n\t\n\t// eslint-disable-next-line\n\t}, []);\n\n\t//bar plot\n\tuseEffect(()=>{\n\t\t// data mean & deviation\n\t\tconst dataMean = [d3.mean(props.data.map(d => parseFloat(d[0]))),d3.mean(props.data.map(d => parseFloat(d[1])))];\n\t\tconst dataDev = [d3.deviation(props.data.map(d => parseFloat(d[0]))),d3.deviation(props.data.map(d => parseFloat(d[1])))];\n\t\t\n\t\t//define axisX\n\t\tconst xScale  = d3.scaleBand().domain([0, 1]).range([0, props.size]).align(0.5).padding(props.barPadding);\n\t\tlet axisX = d3.axisBottom(xScale);\n\n\t\t//define axisY\n\t\tconst yMax = d3.max([dataMean[0],dataDev[0]]);\n\t\tconst yScale  = d3.scaleLinear().domain([0, yMax]).range([props.size, 0]);\n\t\tlet axisY = d3.axisLeft(yScale);\n\n\t\t//append axisX\n\t\tconst svg = d3.select(barplotSvg.current);\n\t\tsvg.append(\"g\")\n\t \t\t .attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`)\n\t\t\t .call(axisX)\n\n\t\t//append axisY\n\t\tsvg.append(\"g\")\n\t\t\t .attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\t\t .call(axisY)\n\n\t\t//append bar\n\t\tconst barSvg = svg.append(\"g\")\n\t\t\t\t\t\t\t\t\t\t\t.attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\n\t\tbarSvg.selectAll(\"rect\")\n\t\t\t\t\t.data(dataMean)\n\t\t\t\t\t.enter()\n\t\t\t\t\t.append(\"rect\")\n\t\t\t\t\t.attr(\"width\", xScale.bandwidth())\n          .attr(\"height\", d => props.size - yScale(d))\n\t\t\t\t\t.attr(\"x\", (_,i) => scaleBand(i))\n\t\t\t\t\t.attr(\"y\",(d,_) => yScale(d))\n\t},[])\n\n\treturn (\n\t\t<div>\n\t\t\t<svg ref={splotSvg} width={svgSize} height={svgSize}> \n\t\t\t</svg>\n      <svg ref={barplotSvg} width={svgSize} height={svgSize}> \n\t\t\t</svg>\n\n\t\t</div>\n\t)\n};\n\nexport default Mainplot;"]},"metadata":{},"sourceType":"module"}