{"ast":null,"code":"var _jsxFileName = \"/Users/yanguangjing/Downloads/snu-infovis-assn-1-skeleton-master 2/src/components/Scatterplot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Scatterplot = props => {\n  _s();\n\n  const splotSvg = useRef(null);\n  const svgSize = props.margin * 2 + props.size;\n  useEffect(() => {\n    //dataset\n    let datasetX = props.data.map(d => parseFloat(d[0]));\n    let datasetY = props.data.map(d => parseFloat(d[1])); //define axisX\n\n    let linearX = d3.scaleLinear().domain([d3.min(datasetX), d3.max(datasetX)]).range([0, props.size]);\n    let axisX = d3.axisBottom(linearX); //define axisY\n\n    let linearY = d3.scaleLinear().domain([d3.min(datasetY), d3.max(datasetY)]).range([props.size, 0]);\n    let axisY = d3.axisLeft(linearY); //append axisX\n\n    const svg = d3.select(splotSvg.current);\n    svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`).call(axisX); //append axisY\n\n    svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`).call(axisY); //append dot\n\n    const dotSvg = svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`);\n    dotSvg.selectAll(\"circle\").data(props.data).enter().append(\"circle\").attr(\"class\", (_, i) => `circle${i}`).attr(\"r\", props.radius).attr(\"cx\", d => linearX(d[0])).attr(\"cy\", d => linearY(d[1]));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: splotSvg,\n      width: svgSize,\n      height: svgSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Scatterplot, \"BxZyyuR43c64h1fasfQJTgubz08=\");\n\n_c = Scatterplot;\nexport default Scatterplot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scatterplot\");","map":{"version":3,"sources":["/Users/yanguangjing/Downloads/snu-infovis-assn-1-skeleton-master 2/src/components/Scatterplot.js"],"names":["React","useRef","useEffect","d3","Scatterplot","props","splotSvg","svgSize","margin","size","datasetX","data","map","d","parseFloat","datasetY","linearX","scaleLinear","domain","min","max","range","axisX","axisBottom","linearY","axisY","axisLeft","svg","select","current","append","attr","call","dotSvg","selectAll","enter","_","i","radius"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect} from \"react\";\nimport * as d3 from \"d3\";\n\n\n\nconst Scatterplot = (props) => {\n\n\tconst splotSvg = useRef(null);\n\tconst svgSize = props.margin * 2 + props.size;\n\n\tuseEffect(() => {\n\t\t//dataset\n\t\tlet datasetX = props.data.map(d => parseFloat(d[0]));\n\t\tlet datasetY = props.data.map(d => parseFloat(d[1]));\n\n\t\t//define axisX\n\t\tlet linearX = d3.scaleLinear().domain([d3.min(datasetX), d3.max(datasetX)]).range([0, props.size]);\n\t\tlet axisX = d3.axisBottom(linearX);\n\n\t\t//define axisY\n\t\tlet linearY = d3.scaleLinear().domain([d3.min(datasetY), d3.max(datasetY)]).range([props.size, 0]);\n\t\tlet axisY = d3.axisLeft(linearY);\n\n\t\t//append axisX\n\t\tconst svg = d3.select(splotSvg.current);\n\t\tsvg.append(\"g\")\n\t \t\t .attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`)\n\t\t\t .call(axisX)\n\n\t\t//append axisY\n\t\tsvg.append(\"g\")\n\t\t\t .attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\t\t .call(axisY)\n\n\t\t//append dot\n\t\tconst dotSvg = svg.append(\"g\")\n\t\t\t\t\t\t\t\t\t\t\t.attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\tdotSvg.selectAll(\"circle\")\n\t\t\t\t\t.data(props.data)\n\t\t\t\t\t.enter()\n\t\t\t\t\t.append(\"circle\")\n\t\t\t\t\t.attr(\"class\", (_,i) => `circle${i}`)\n\t\t\t\t\t.attr(\"r\", props.radius)\n\t\t\t\t\t.attr(\"cx\", d => linearX(d[0]))\n\t\t\t\t\t.attr(\"cy\", d => linearY(d[1]))\n\t\t\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<svg ref={splotSvg} width={svgSize} height={svgSize}> \n\t\t\t</svg>\n\t\t</div>\n\t)\n};\n\nexport default Scatterplot;"]},"metadata":{},"sourceType":"module"}