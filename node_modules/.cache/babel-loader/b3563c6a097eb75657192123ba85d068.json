{"ast":null,"code":"var _jsxFileName = \"/Users/yanguangjing/Downloads/snu-infovis-assn-1-skeleton-master 2/src/components/Mainplot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { scaleBand } from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mainplot = props => {\n  _s();\n\n  const splotSvg = useRef(null);\n  const barplotSvg = useRef(null);\n  const svgSize = props.margin * 2 + props.size; // data mean & deviation\n\n  const dataMean = [d3.mean(props.data.map(d => parseFloat(d[0]))), d3.mean(props.data.map(d => parseFloat(d[1])))];\n  const dataDev = [d3.deviation(props.data.map(d => parseFloat(d[0]))), d3.deviation(props.data.map(d => parseFloat(d[1])))];\n  let barSvg; // update barplot\n\n  function barUpdate(mean, dev) {\n    console.log(\"mean:\" + mean); //define axisY\n\n    const yMax = d3.max([mean[0], mean[1]]);\n    const yScale = d3.scaleLinear().domain([0, yMax]).range([props.size, 0]);\n    let axisY = d3.axisLeft(yScale);\n    const svg = d3.select(barplotSvg.current); //append axisY\n\n    svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`).call(axisY);\n    barSvg.selectAll(\"rect\").data(mean).join().transition().duration(10).attr(\"y\", (d, _) => yScale(d)).attr(\"height\", d => {\n      console.log(`height:${props.size - yScale(d)}`);\n      return props.size - yScale(d);\n    });\n  }\n\n  ; // TODO\n  //dino plot\n\n  useEffect(() => {\n    // TODO\n    //dataset\n    let datasetX = props.data.map(d => parseFloat(d[0]));\n    let datasetY = props.data.map(d => parseFloat(d[1])); //define axisX\n\n    let linearX = d3.scaleLinear().domain([d3.min(datasetX), d3.max(datasetX)]).range([0, props.size]);\n    let axisX = d3.axisBottom(linearX); //define axisY\n\n    let linearY = d3.scaleLinear().domain([d3.min(datasetY), d3.max(datasetY)]).range([props.size, 0]);\n    let axisY = d3.axisLeft(linearY); //append axisX\n\n    const svg = d3.select(splotSvg.current);\n    svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`).call(axisX); //append axisY\n\n    svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`).call(axisY); //append dot\n\n    const dotSvg = svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`);\n    dotSvg.selectAll(\"circle\").data(props.data).enter().append(\"circle\").attr(\"class\", (_, i) => `circle${i}`).attr(\"r\", props.radius).attr(\"cx\", d => linearX(d[0])).attr(\"cy\", d => linearY(d[1])); //append brush\n\n    const brush = d3.brush().extent([[0, 0], [props.size, props.size]]).on(\"start brush end\", brushed); //.on(\"start\", cleared);\n\n    const brushSvg = svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`).call(brush); // function cleared(){\n    // \td3.selectAll(\"circle\").attr(\"fill\",\"black\");\n    // }\n\n    function brushed(event) {\n      let selection = event.selection;\n      let [[x0, y0], [x1, y1]] = selection; //console.log(`x0:${x0},y0:${y0},x1:${x1},y1:${y1}`)\n      // brush none dot\n\n      if (selection == null) {\n        d3.selectAll(\"circle\").attr(\"fill\", \"black\");\n        barUpdate(dataMean, dataDev);\n        return;\n      } //in section\n\n\n      const databrushed = props.data.map((d, i) => {\n        const dataTX = linearX(parseFloat(d[0]));\n        const dataTY = linearY(parseFloat(d[1]));\n        if (x0 <= dataTX && dataTX <= x1 && y0 <= dataTY && dataTY <= y1) return true;else return false;\n      });\n      const inSectionId = databrushed.reduce((acc, cur, i) => {\n        if (cur) acc.push(i);\n        return acc;\n      }, []);\n      d3.selectAll(\"circle\").attr(\"fill\", \"black\"); // set section color\n\n      inSectionId.forEach(e => {\n        d3.select(`.circle${e}`).attr(\"fill\", \"red\");\n      }); // update\n\n      if (inSectionId == null || inSectionId.length === 1) {\n        barUpdate(dataMean, dataDev);\n      } else {\n        const sectionDataMean = [d3.mean(inSectionId.map(id => parseFloat(props.data[id][0]))), d3.mean(inSectionId.map(id => parseFloat(props.data[id][0])))];\n        const sectionDataDev = [d3.deviation(inSectionId.map(i => parseFloat(props.data[i][0]))), d3.deviation(inSectionId.map(i => parseFloat(props.data[i][0])))];\n        barUpdate(sectionDataMean, sectionDataDev);\n        console.log(`sectionDataMean${sectionDataMean},${sectionDataDev}`);\n      }\n    } // eslint-disable-next-line\n\n  }, []); //bar plot\n\n  useEffect(() => {\n    //define axisX\n    const xScale = d3.scaleBand().domain([0, 1]).range([0, props.size]).align(0.5).padding(props.barPadding);\n    let axisX = d3.axisBottom(xScale); //define axisY\n\n    const yMax = d3.max([dataMean[0], dataMean[1]]);\n    const yScale = d3.scaleLinear().domain([0, yMax]).range([props.size, 0]);\n    let axisY = d3.axisLeft(yScale); //append axisX\n\n    const svg = d3.select(barplotSvg.current);\n    svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`).call(axisX); //append axisY\n\n    svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`).call(axisY); //append bar\n\n    const barSvg = svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`);\n    barSvg.selectAll(\"rect\").data(dataMean).enter().append(\"rect\").attr(\"width\", xScale.bandwidth()).attr(\"height\", d => props.size - yScale(d)).attr(\"x\", (d, i) => xScale(i)).attr(\"y\", (d, _) => yScale(d));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: splotSvg,\n      width: svgSize,\n      height: svgSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: barplotSvg,\n      width: svgSize,\n      height: svgSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Mainplot, \"gVqVbQICJLzbwptZdq7jglYFjfg=\");\n\n_c = Mainplot;\nexport default Mainplot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainplot\");","map":{"version":3,"sources":["/Users/yanguangjing/Downloads/snu-infovis-assn-1-skeleton-master 2/src/components/Mainplot.js"],"names":["React","useRef","useEffect","d3","scaleBand","Mainplot","props","splotSvg","barplotSvg","svgSize","margin","size","dataMean","mean","data","map","d","parseFloat","dataDev","deviation","barSvg","barUpdate","dev","console","log","yMax","max","yScale","scaleLinear","domain","range","axisY","axisLeft","svg","select","current","append","attr","call","selectAll","join","transition","duration","_","datasetX","datasetY","linearX","min","axisX","axisBottom","linearY","dotSvg","enter","i","radius","brush","extent","on","brushed","brushSvg","event","selection","x0","y0","x1","y1","databrushed","dataTX","dataTY","inSectionId","reduce","acc","cur","push","forEach","e","length","sectionDataMean","id","sectionDataDev","xScale","align","padding","barPadding","bandwidth"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect} from \"react\";\nimport * as d3 from \"d3\";\nimport { scaleBand } from \"d3\";\n\n\n\nconst Mainplot = (props) => {\n\n\tconst splotSvg = useRef(null);\n  const barplotSvg = useRef(null);\n  const svgSize = props.margin * 2 + props.size;\n\t// data mean & deviation\n\tconst dataMean = [d3.mean(props.data.map(d => parseFloat(d[0]))),d3.mean(props.data.map(d => parseFloat(d[1])))];\n\tconst dataDev = [d3.deviation(props.data.map(d => parseFloat(d[0]))),d3.deviation(props.data.map(d => parseFloat(d[1])))];\n\n\tlet barSvg;\n\n\t// update barplot\n\tfunction barUpdate(mean, dev){\n\tconsole.log(\"mean:\"+mean);\n\n\t//define axisY\n\tconst yMax = d3.max([mean[0],mean[1]]);\n\tconst yScale  = d3.scaleLinear().domain([0, yMax]).range([props.size, 0]);\n\tlet axisY = d3.axisLeft(yScale);\n\n\tconst svg = d3.select(barplotSvg.current);\n\t//append axisY\n\tsvg.append(\"g\")\n\t\t .attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\t .call(axisY)\n\t\n\tbarSvg.selectAll(\"rect\")\n\t\t\t\t.data(mean)\n\t\t\t\t.join()\n\t\t\t\t.transition()\n        .duration(10)\n\t\t\t\t.attr(\"y\",(d,_) => yScale(d))\n\t\t\t\t.attr(\"height\",d => {\n\t\t\t\t\tconsole.log(`height:${props.size - yScale(d)}`);\n\t\t\t\t\treturn props.size - yScale(d);})\n\t\n\t};\n\n  // TODO\n\n\t//dino plot\n\tuseEffect(() => {\n    // TODO\n\n\t\t//dataset\n\t\tlet datasetX = props.data.map(d => parseFloat(d[0]));\n\t\tlet datasetY = props.data.map(d => parseFloat(d[1]));\n\n\t\t//define axisX\n\t\tlet linearX = d3.scaleLinear().domain([d3.min(datasetX), d3.max(datasetX)]).range([0, props.size]);\n\t\tlet axisX = d3.axisBottom(linearX);\n\n\t\t//define axisY\n\t\tlet linearY = d3.scaleLinear().domain([d3.min(datasetY), d3.max(datasetY)]).range([props.size, 0]);\n\t\tlet axisY = d3.axisLeft(linearY);\n\n\t\t//append axisX\n\t\tconst svg = d3.select(splotSvg.current);\n\t\tsvg.append(\"g\")\n\t \t\t .attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`)\n\t\t\t .call(axisX)\n\n\t\t//append axisY\n\t\tsvg.append(\"g\")\n\t\t\t .attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\t\t .call(axisY)\n\n\t\t//append dot\n\t\tconst dotSvg = svg.append(\"g\")\n\t\t\t\t\t\t\t\t\t\t\t.attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\tdotSvg.selectAll(\"circle\")\n\t\t\t\t\t.data(props.data)\n\t\t\t\t\t.enter()\n\t\t\t\t\t.append(\"circle\")\n\t\t\t\t\t.attr(\"class\", (_,i) => `circle${i}`)\n\t\t\t\t\t.attr(\"r\", props.radius)\n\t\t\t\t\t.attr(\"cx\", d => linearX(d[0]))\n\t\t\t\t\t.attr(\"cy\", d => linearY(d[1]))\n\n\n\t\t//append brush\n\t\tconst brush = d3.brush()\n      .extent([[0, 0], [props.size, props.size]])\n      .on(\"start brush end\", brushed)\n\t\t\t//.on(\"start\", cleared);\n\t\tconst brushSvg = svg.append(\"g\")\n\t\t\t\t\t\t\t\t\t\t\t\t.attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\t\t\t\t\t\t\t\t\t\t\t.call(brush)\n\n\t\t// function cleared(){\n\t\t// \td3.selectAll(\"circle\").attr(\"fill\",\"black\");\n\t\t// }\n\n\n\t\tfunction brushed(event) {\n    let selection = event.selection;\n\t\tlet [[x0, y0],[x1, y1]] = selection;\n\t\t//console.log(`x0:${x0},y0:${y0},x1:${x1},y1:${y1}`)\n\t\t// brush none dot\n    if (selection == null) {\n      d3.selectAll(\"circle\").attr(\"fill\", \"black\");\n\t\t\tbarUpdate(dataMean,dataDev);\n      return;\n    }\n\t\t//in section\n\t\tconst databrushed = props.data.map((d, i)=>{\n\t\t\tconst dataTX = linearX(parseFloat(d[0]));\n\t\t\tconst dataTY = linearY(parseFloat(d[1]));\n\t\t\tif(x0 <= dataTX && dataTX <= x1 && y0 <= dataTY && dataTY <= y1\n\t\t\t\t)return true;\n\t\t\telse return false;\t\n\t\t});\n\t\tconst inSectionId = databrushed.reduce((acc, cur, i) => {\n\t\t\tif (cur) acc.push(i);\n\t\t\treturn acc;\n\t\t}, [])\n\t\td3.selectAll(\"circle\").attr(\"fill\",\"black\");\n\t\t// set section color\n\t\tinSectionId.forEach(e =>{\n\t\t\td3.select(`.circle${e}`)\n\t\t\t\t.attr(\"fill\",\"red\");\n\t\t} )\n\t\t// update\n\t\tif( inSectionId == null || inSectionId.length === 1){\n\t\t\tbarUpdate(dataMean,dataDev);\n\t\t}else\n\t\t{\n\t\t\tconst sectionDataMean = [d3.mean(inSectionId.map(id => parseFloat(props.data[id][0]))),d3.mean(inSectionId.map(id => parseFloat(props.data[id][0])))];\n\t\t\tconst sectionDataDev = [d3.deviation(inSectionId.map(i => parseFloat(props.data[i][0]))),d3.deviation(inSectionId.map(i => parseFloat(props.data[i][0])))];\n\t\t\tbarUpdate(sectionDataMean,sectionDataDev);\n\t\t\tconsole.log(`sectionDataMean${sectionDataMean},${sectionDataDev}`);\n\n\t\t}\n  }\n\t\n\t\n\t// eslint-disable-next-line\n\t}, []);\n\n\t//bar plot\n\tuseEffect(()=>{\n\t\t\n\t\t\n\t\t//define axisX\n\t\tconst xScale  = d3.scaleBand().domain([0, 1]).range([0, props.size]).align(0.5).padding(props.barPadding);\n\t\tlet axisX = d3.axisBottom(xScale);\n\n\t\t//define axisY\n\t\tconst yMax = d3.max([dataMean[0],dataMean[1]]);\n\t\tconst yScale  = d3.scaleLinear().domain([0, yMax]).range([props.size, 0]);\n\t\tlet axisY = d3.axisLeft(yScale);\n\n\t\t//append axisX\n\t\tconst svg = d3.select(barplotSvg.current);\n\t\tsvg.append(\"g\")\n\t \t\t .attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`)\n\t\t\t .call(axisX)\n\n\t\t//append axisY\n\t\tsvg.append(\"g\")\n\t\t\t .attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\t\t .call(axisY)\n\n\t\t//append bar\n\t\tconst barSvg = svg.append(\"g\")\n\t\t\t\t\t\t\t\t\t\t\t.attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\tbarSvg.selectAll(\"rect\")\n\t\t\t\t\t.data(dataMean)\n\t\t\t\t\t.enter()\n\t\t\t\t\t.append(\"rect\")\n\t\t\t\t\t.attr(\"width\", xScale.bandwidth())\n          .attr(\"height\", d => props.size - yScale(d))\n\t\t\t\t\t.attr(\"x\", (d,i) => xScale(i))\n\t\t\t\t\t.attr(\"y\",(d,_) => yScale(d))\n\t\t\n\n\t},[])\n\n\treturn (\n\t\t<div>\n\t\t\t<svg ref={splotSvg} width={svgSize} height={svgSize}> \n\t\t\t</svg>\n      <svg ref={barplotSvg} width={svgSize} height={svgSize}> \n\t\t\t</svg>\n\n\t\t</div>\n\t)\n};\n\nexport default Mainplot;"]},"metadata":{},"sourceType":"module"}