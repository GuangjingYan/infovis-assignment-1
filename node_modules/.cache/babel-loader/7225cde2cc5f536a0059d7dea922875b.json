{"ast":null,"code":"var _jsxFileName = \"/Users/yanguangjing/Downloads/snu-infovis-assn-1-skeleton-master 2/src/components/Mainplot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mainplot = props => {\n  _s();\n\n  const splotSvg = useRef(null);\n  const barplotSvg = useRef(null);\n  const svgSize = props.margin * 2 + props.size; // TODO\n  //dino plot\n\n  useEffect(() => {\n    // TODO\n    //dataset\n    let datasetX = props.data.map(d => d[0]);\n    let datasetY = props.data.map(d => d[1]); //define axisX\n\n    let linearX = d3.scaleLinear().domain([d3.min(datasetX), d3.max(datasetX)]).range([0, props.size]);\n    let axisX = d3.axisBottom(linearX); //define axisY\n\n    let linearY = d3.scaleLinear().domain([d3.min(datasetY), d3.max(datasetY)]).range([props.size, 0]);\n    let axisY = d3.axisLeft(linearY); //append axisX\n\n    const svg = d3.select(splotSvg.current);\n    svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`).call(axisX); //append axisY\n\n    svg.append(\"g\").attr(\"transform\", `translate(${props.margin},${props.margin})`).call(axisY);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: splotSvg,\n      width: svgSize,\n      height: svgSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: barplotSvg,\n      width: svgSize,\n      height: svgSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Mainplot, \"N2FtAKgm5d0h4qG0kRlNvladoxY=\");\n\n_c = Mainplot;\nexport default Mainplot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainplot\");","map":{"version":3,"sources":["/Users/yanguangjing/Downloads/snu-infovis-assn-1-skeleton-master 2/src/components/Mainplot.js"],"names":["React","useRef","useEffect","d3","Mainplot","props","splotSvg","barplotSvg","svgSize","margin","size","datasetX","data","map","d","datasetY","linearX","scaleLinear","domain","min","max","range","axisX","axisBottom","linearY","axisY","axisLeft","svg","select","current","append","attr","call"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAD,CAAvB;AACC,QAAMM,UAAU,GAAGN,MAAM,CAAC,IAAD,CAAzB;AACA,QAAMO,OAAO,GAAGH,KAAK,CAACI,MAAN,GAAe,CAAf,GAAmBJ,KAAK,CAACK,IAAzC,CAJ0B,CAM1B;AAED;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACb;AAEF;AACA,QAAIS,QAAQ,GAAGN,KAAK,CAACO,IAAN,CAAWC,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAArB,CAAf;AACA,QAAIC,QAAQ,GAAGV,KAAK,CAACO,IAAN,CAAWC,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAArB,CAAf,CALe,CAOf;;AACA,QAAIE,OAAO,GAAGb,EAAE,CAACc,WAAH,GAAiBC,MAAjB,CAAwB,CAACf,EAAE,CAACgB,GAAH,CAAOR,QAAP,CAAD,EAAmBR,EAAE,CAACiB,GAAH,CAAOT,QAAP,CAAnB,CAAxB,EAA8DU,KAA9D,CAAoE,CAAC,CAAD,EAAIhB,KAAK,CAACK,IAAV,CAApE,CAAd;AACA,QAAIY,KAAK,GAAGnB,EAAE,CAACoB,UAAH,CAAcP,OAAd,CAAZ,CATe,CAWf;;AACA,QAAIQ,OAAO,GAAGrB,EAAE,CAACc,WAAH,GAAiBC,MAAjB,CAAwB,CAACf,EAAE,CAACgB,GAAH,CAAOJ,QAAP,CAAD,EAAmBZ,EAAE,CAACiB,GAAH,CAAOL,QAAP,CAAnB,CAAxB,EAA8DM,KAA9D,CAAoE,CAAChB,KAAK,CAACK,IAAP,EAAa,CAAb,CAApE,CAAd;AACA,QAAIe,KAAK,GAAGtB,EAAE,CAACuB,QAAH,CAAYF,OAAZ,CAAZ,CAbe,CAef;;AACA,UAAMG,GAAG,GAAGxB,EAAE,CAACyB,MAAH,CAAUtB,QAAQ,CAACuB,OAAnB,CAAZ;AACAF,IAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EACIC,IADJ,CACS,WADT,EACuB,aAAY1B,KAAK,CAACI,MAAO,IAAGJ,KAAK,CAACK,IAAN,GAAaL,KAAK,CAACI,MAAO,GAD7E,EAEGuB,IAFH,CAEQV,KAFR,EAjBe,CAqBf;;AACAK,IAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EACGC,IADH,CACQ,WADR,EACsB,aAAY1B,KAAK,CAACI,MAAO,IAAGJ,KAAK,CAACI,MAAO,GAD/D,EAEGuB,IAFH,CAEQP,KAFR;AAMA,GA5BQ,EA4BN,EA5BM,CAAT;AA8BA,sBACC;AAAA,4BACC;AAAK,MAAA,GAAG,EAAEnB,QAAV;AAAoB,MAAA,KAAK,EAAEE,OAA3B;AAAoC,MAAA,MAAM,EAAEA;AAA5C;AAAA;AAAA;AAAA;AAAA,YADD,eAGI;AAAK,MAAA,GAAG,EAAED,UAAV;AAAsB,MAAA,KAAK,EAAEC,OAA7B;AAAsC,MAAA,MAAM,EAAEA;AAA9C;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CAhDD;;GAAMJ,Q;;KAAAA,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import React, { useRef, useEffect} from \"react\";\nimport * as d3 from \"d3\";\n\n\n\nconst Mainplot = (props) => {\n\n\tconst splotSvg = useRef(null);\n  const barplotSvg = useRef(null);\n  const svgSize = props.margin * 2 + props.size;\n\n  // TODO\n\n\t//dino plot\n\tuseEffect(() => {\n    // TODO\n\n\t\t//dataset\n\t\tlet datasetX = props.data.map(d => d[0]);\n\t\tlet datasetY = props.data.map(d => d[1]);\n\n\t\t//define axisX\n\t\tlet linearX = d3.scaleLinear().domain([d3.min(datasetX), d3.max(datasetX)]).range([0, props.size]);\n\t\tlet axisX = d3.axisBottom(linearX);\n\n\t\t//define axisY\n\t\tlet linearY = d3.scaleLinear().domain([d3.min(datasetY), d3.max(datasetY)]).range([props.size, 0]);\n\t\tlet axisY = d3.axisLeft(linearY);\n\n\t\t//append axisX\n\t\tconst svg = d3.select(splotSvg.current);\n\t\tsvg.append(\"g\")\n\t \t\t .attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`)\n\t\t\t .call(axisX)\n\n\t\t//append axisY\n\t\tsvg.append(\"g\")\n\t\t\t .attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\t\t .call(axisY)\n\n\t\t\n\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<svg ref={splotSvg} width={svgSize} height={svgSize}> \n\t\t\t</svg>\n      <svg ref={barplotSvg} width={svgSize} height={svgSize}> \n\t\t\t</svg>\n\n\t\t</div>\n\t)\n};\n\nexport default Mainplot;"]},"metadata":{},"sourceType":"module"}