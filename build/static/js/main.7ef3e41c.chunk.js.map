{"version":3,"sources":["components/Scatterplot.js","components/Mainplot.js","App.js","index.js"],"names":["Scatterplot","props","splotSvg","useRef","svgSize","margin","size","useEffect","datasetX","data","map","d","parseFloat","datasetY","linearX","d3","domain","range","axisX","linearY","axisY","svg","current","append","attr","concat","call","selectAll","enter","_","i","radius","_jsx","children","ref","width","height","Mainplot","barSvg","ySvg","lineSvg","barplotSvg","dataMean","dataDev","barColor","barUpdate","updateMean","updateDev","yMax","yScale","join","transition","duration","style","brush","extent","on","event","selection","_selection","_slicedToArray","_selection$","x0","y0","_selection$2","x1","y1","inSectionId","dataTX","dataTY","reduce","acc","cur","push","forEach","e","length","id","xScale","align","padding","barPadding","tickText","bandwidth","_jsxs","App","keys","Object","datasaurus","filter","className","class","marginRight","marginTop","name","dino","slice","key","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"uyxCAwDeA,EAnDK,SAACC,GAEpB,IAAMC,EAAWC,iBAAO,MAClBC,EAAyB,EAAfH,EAAMI,OAAaJ,EAAMK,KAwCzC,OAtCAC,qBAAU,WAET,IAAIC,EAAWP,EAAMQ,KAAKC,KAAI,SAAAC,GAAC,OAAIC,WAAWD,EAAE,GAAG,IAC/CE,EAAWZ,EAAMQ,KAAKC,KAAI,SAAAC,GAAC,OAAIC,WAAWD,EAAE,GAAG,IAG/CG,EAAUC,MAAiBC,OAAO,CAACD,IAAOP,GAAWO,IAAOP,KAAYS,MAAM,CAAC,EAAGhB,EAAMK,OACxFY,EAAQH,IAAcD,GAGtBK,EAAUJ,MAAiBC,OAAO,CAACD,IAAOF,GAAWE,IAAOF,KAAYI,MAAM,CAAChB,EAAMK,KAAM,IAC3Fc,EAAQL,IAAYI,GAGlBE,EAAMN,IAAUb,EAASoB,SAC/BD,EAAIE,OAAO,KACPC,KAAK,YAAY,aAADC,OAAexB,EAAMI,OAAM,KAAAoB,OAAIxB,EAAMK,KAAOL,EAAMI,OAAM,MACzEqB,KAAKR,GAGRG,EAAIE,OAAO,KACRC,KAAK,YAAY,aAADC,OAAexB,EAAMI,OAAM,KAAAoB,OAAIxB,EAAMI,OAAM,MAC3DqB,KAAKN,GAGOC,EAAIE,OAAO,KAChBC,KAAK,YAAY,aAADC,OAAexB,EAAMI,OAAM,KAAAoB,OAAIxB,EAAMI,OAAM,MAC9DsB,UAAU,UACblB,KAAKR,EAAMQ,MACXmB,QACAL,OAAO,UACPC,KAAK,SAAS,SAACK,EAAEC,GAAC,eAAAL,OAAcK,EAAC,IACjCN,KAAK,IAAKvB,EAAM8B,QAChBP,KAAK,MAAM,SAAAb,GAAC,OAAIG,EAAQH,EAAE,GAAG,IAC7Ba,KAAK,MAAM,SAAAb,GAAC,OAAIQ,EAAQR,EAAE,GAAG,GAElC,IAGCqB,cAAA,OAAAC,SACCD,cAAA,OAAKE,IAAKhC,EAAUiC,MAAO/B,EAASgC,OAAQhC,KAI/C,E,OCsJeiC,EAvME,SAACpC,GAEjB,IASIqC,EAAQC,EAAMC,EATZtC,EAAWC,iBAAO,MACjBsC,EAAatC,iBAAO,MACpBC,EAAyB,EAAfH,EAAMI,OAAaJ,EAAMK,KAEpCoC,EAAW,CAAC3B,IAAQd,EAAMQ,KAAKC,KAAI,SAAAC,GAAC,OAAIC,WAAWD,EAAE,GAAG,KAAGI,IAAQd,EAAMQ,KAAKC,KAAI,SAAAC,GAAC,OAAIC,WAAWD,EAAE,GAAG,MACvGgC,EAAU,CAAC5B,IAAad,EAAMQ,KAAKC,KAAI,SAAAC,GAAC,OAAIC,WAAWD,EAAE,GAAG,KAAGI,IAAad,EAAMQ,KAAKC,KAAI,SAAAC,GAAC,OAAIC,WAAWD,EAAE,GAAG,MAEhHiC,EAAW,CAAC,UAAU,WAsJ5B,SAASC,EAAUC,EAAYC,GAE9B,IAAMC,EAAOjC,IAAO+B,GACdG,EAASlC,MAAiBC,OAAO,CAAC,EAAGgC,IAAO/B,MAAM,CAAChB,EAAMK,KAAM,IACjEc,EAAQL,IAAYkC,GAGxBV,EAAKb,KAAKN,GAEVkB,EAAOX,UAAU,QACblB,KAAKqC,GACLI,OACAC,aACAC,SAAS,IACT5B,KAAK,KAAI,SAAAb,GAAC,OAAIsC,EAAOtC,EAAE,IACvBa,KAAK,UAAS,SAAAb,GACd,OAAOV,EAAMK,KAAO2C,EAAOtC,EAAG,IAElC6B,EAAQb,UAAU,QACblB,KAAKsC,GACLG,OACAC,aACAC,SAAS,IACTC,MAAM,SAAS,SACV7B,KAAK,MAAM,SAACb,EAAGmB,GAAC,OAAKmB,EAAOH,EAAWhB,GAAKnB,EAAE,IAC9Ca,KAAK,MAAM,SAACb,EAAGmB,GAAC,OAAKmB,EAAOH,EAAWhB,GAAKnB,EAAE,GAExD,CAED,OA9KAJ,qBAAU,WAET,IAAIC,EAAWP,EAAMQ,KAAKC,KAAI,SAAAC,GAAC,OAAIC,WAAWD,EAAE,GAAG,IAC/CE,EAAWZ,EAAMQ,KAAKC,KAAI,SAAAC,GAAC,OAAIC,WAAWD,EAAE,GAAG,IAG/CG,EAAUC,MAAiBC,OAAO,CAACD,IAAOP,GAAWO,IAAOP,KAAYS,MAAM,CAAC,EAAGhB,EAAMK,OACxFY,EAAQH,IAAcD,GAGtBK,EAAUJ,MAAiBC,OAAO,CAACD,IAAOF,GAAWE,IAAOF,KAAYI,MAAM,CAAChB,EAAMK,KAAM,IAC3Fc,EAAQL,IAAYI,GAGlBE,EAAMN,IAAUb,EAASoB,SAC/BD,EAAIE,OAAO,KACPC,KAAK,YAAY,aAADC,OAAexB,EAAMI,OAAM,KAAAoB,OAAIxB,EAAMK,KAAOL,EAAMI,OAAM,MACzEqB,KAAKR,GAGRG,EAAIE,OAAO,KACRC,KAAK,YAAY,aAADC,OAAexB,EAAMI,OAAM,KAAAoB,OAAIxB,EAAMI,OAAM,MAC3DqB,KAAKN,GAGOC,EAAIE,OAAO,KAChBC,KAAK,YAAY,aAADC,OAAexB,EAAMI,OAAM,KAAAoB,OAAIxB,EAAMI,OAAM,MAC9DsB,UAAU,UACblB,KAAKR,EAAMQ,MACXmB,QACAL,OAAO,UACPC,KAAK,SAAS,SAACK,EAAEC,GAAC,eAAAL,OAAcK,EAAC,IACjCN,KAAK,IAAKvB,EAAM8B,QAChBP,KAAK,MAAM,SAAAb,GAAC,OAAIG,EAAQH,EAAE,GAAG,IAC7Ba,KAAK,MAAM,SAAAb,GAAC,OAAIQ,EAAQR,EAAE,GAAG,IAIjC,IAAM2C,EAAQvC,MACTwC,OAAO,CAAC,CAAC,EAAG,GAAI,CAACtD,EAAMK,KAAML,EAAMK,QACnCkD,GAAG,mBAUR,SAAiBC,GACf,IAAIC,EAAYD,EAAMC,UAGtB,GAAiB,MAAbA,EAGF,OAFA3C,IAAa,UAAUS,KAAK,OAAQ,cACvCqB,EAAUH,EAASC,GAGpB,IAAAgB,EAAAC,YAA0BF,EAAS,GAAAG,EAAAD,YAAAD,EAAA,MAA7BG,EAAED,EAAA,GAAEE,EAAEF,EAAA,GAAAG,EAAAJ,YAAAD,EAAA,MAAGM,EAAED,EAAA,GAAEE,EAAEF,EAAA,GASfG,EAPclE,EAAMQ,KAAKC,KAAI,SAACC,EAAGmB,GACtC,IAAMsC,EAAStD,EAAQF,WAAWD,EAAE,KAC9B0D,EAASlD,EAAQP,WAAWD,EAAE,KACpC,OAAGmD,GAAMM,GAAUA,GAAUH,GAAMF,GAAMM,GAAUA,GAAUH,CAG9D,IACgCI,QAAO,SAACC,EAAKC,EAAK1C,GAEjD,OADI0C,GAAKD,EAAIE,KAAK3C,GACXyC,CACR,GAAG,IAQH,GAPAxD,IAAa,UAAUS,KAAK,OAAO,SAEnC2C,EAAYO,SAAQ,SAAAC,GACnB5D,IAAa,UAADU,OAAWkD,IACrBnD,KAAK,OAAO,MACf,IAE2B,IAAvB2C,EAAYS,QAAuC,IAAvBT,EAAYS,OAC3C/B,EAAUH,EAASC,OAEpB,CAGCE,EAFwB,CAAC9B,IAAQoD,EAAYzD,KAAI,SAAAmE,GAAE,OAAIjE,WAAWX,EAAMQ,KAAKoE,GAAI,GAAG,KAAG9D,IAAQoD,EAAYzD,KAAI,SAAAmE,GAAE,OAAIjE,WAAWX,EAAMQ,KAAKoE,GAAI,GAAG,MAC3H,CAAC9D,IAAaoD,EAAYzD,KAAI,SAAAoB,GAAC,OAAIlB,WAAWX,EAAMQ,KAAKqB,GAAG,GAAG,KAAGf,IAAaoD,EAAYzD,KAAI,SAAAoB,GAAC,OAAIlB,WAAWX,EAAMQ,KAAKqB,GAAG,GAAG,MAExJ,CACA,IA7CiBT,EAAIE,OAAO,KACjBC,KAAK,YAAY,aAADC,OAAexB,EAAMI,OAAM,KAAAoB,OAAIxB,EAAMI,OAAM,MAC3DqB,KAAK4B,EA6CjB,GAAG,IAGH/C,qBAAU,WAET,IAAMuE,EAAU/D,MAAeC,OAAO,CAAC,EAAG,IAAIC,MAAM,CAAC,EAAGhB,EAAMK,OAAOyE,MAAM,IAAKC,QAAQ/E,EAAMgF,YACxFC,EAAYnE,MAAeC,OAAO,CAAC,IAAK,MAAMC,MAAM,CAAC,EAAGhB,EAAMK,OAAOyE,MAAM,IAAKC,QAAQ/E,EAAMgF,YAChG/D,EAAQH,IAAcmE,GAGpBlC,EAAOjC,IAAO,CAAC2B,EAAS,GAAGA,EAAS,KACpCO,EAAUlC,MAAiBC,OAAO,CAAC,EAAGgC,IAAO/B,MAAM,CAAChB,EAAMK,KAAM,IAClEc,EAAQL,IAAYkC,GAGlB5B,EAAMN,IAAU0B,EAAWnB,SACpBD,EAAIE,OAAO,KACpBC,KAAK,YAAY,aAADC,OAAexB,EAAMI,OAAM,KAAAoB,OAAIxB,EAAMK,KAAOL,EAAMI,OAAM,MACzEqB,KAAKR,GAGRqB,EAAOlB,EAAIE,OAAO,KACfC,KAAK,YAAY,aAADC,OAAexB,EAAMI,OAAM,KAAAoB,OAAIxB,EAAMI,OAAM,MAC3DqB,KAAKN,IAGRkB,EAASjB,EAAIE,OAAO,KACbC,KAAK,YAAY,aAADC,OAAexB,EAAMI,OAAM,KAAAoB,OAAIxB,EAAMI,OAAM,OAE3DsB,UAAU,QACblB,KAAKiC,GACLd,QACAL,OAAO,QACPC,KAAK,QAASsD,EAAOK,aAChB3D,KAAK,UAAU,SAAAb,GAAC,OAAIV,EAAMK,KAAO2C,EAAOtC,EAAE,IAC/Ca,KAAK,KAAK,SAACK,EAAEC,GAAC,OAAKgD,EAAOhD,EAAE,IAC5BN,KAAK,KAAI,SAACb,EAAEkB,GAAC,OAAKoB,EAAOtC,EAAE,IAC3Ba,KAAK,QAAO,SAACK,EAAEC,GAAC,OAAGc,EAASd,EAAE,KAGlCU,EAAUnB,EAAIE,OAAO,KACbC,KAAK,YAAY,aAADC,OAAexB,EAAMI,OAAM,KAAAoB,OAAIxB,EAAMI,OAAM,OAE3DsB,UAAU,QACblB,KAAKkC,GACLf,QACAL,OAAO,QACP8B,MAAM,SAAS,SACf7B,KAAK,MAAM,SAACb,EAAGmB,GAAC,OAAKgD,EAAOhD,GAAKgD,EAAOK,YAAc,CAAC,IAClD3D,KAAK,MAAM,SAACb,EAAGmB,GAAC,OAAKgD,EAAOhD,GAAKgD,EAAOK,YAAc,CAAC,IACvD3D,KAAK,MAAM,SAACb,EAAGmB,GAAC,OAAKmB,EAAOP,EAASZ,GAAKnB,EAAE,IAC5Ca,KAAK,MAAM,SAACb,EAAGmB,GAAC,OAAKmB,EAAOP,EAASZ,GAAKnB,EAAE,GAEvD,GAAE,IAiCDyE,eAAA,OAAAnD,SAAA,CACCD,cAAA,OAAKE,IAAKhC,EAAUiC,MAAO/B,EAASgC,OAAQhC,IAEzC4B,cAAA,OAAKE,IAAKO,EAAYN,MAAO/B,EAASgC,OAAQhC,MAKpD,E,aCjIeiF,MAhEf,WAEE,IAUIC,EAAOC,OAAOD,KAAKE,GAKvB,OAJAF,EAAOA,EAAKG,QAAO,SAAA9E,GAAC,MAAU,SAANA,CAAY,IAKlCyE,eAAA,OAAKM,UAAU,MAAKzD,SAAA,CAClBmD,eAAA,OAAKO,MAAM,iBAAgB1D,SAAA,CACzBD,cAAA,MAAIqB,MAAO,CAACuC,YAAa,IAAI3D,SAC5B,oBAEDD,cAAA,MAAIqB,MAAO,CAACwC,UAAW,IAAI5D,SACxB6D,kCAGL9D,cAAA,OAAK2D,MAAM,iBAAgB1D,SACzBD,cAACK,EAAQ,CACP/B,KAvBU,IAwBVG,KAAM+E,EAAWO,KACjB1F,OAvBO,GAwBP0B,OAvBO,IAwBPkD,WAvBW,OA0BfjD,cAAA,OAAK2D,MAAM,iBAAgB1D,SAEzBqD,EAAKU,MAAM,EAAG,GAAGtF,KAAI,SAAAuF,GACnB,OAAQjE,cAAChC,EAAW,CAClBM,KAjCO,IAkCPG,KAAM+E,EAAWS,GACjB5F,OAlCK,GAmCL0B,OAlCK,KAoCT,MAGFC,cAAA,OAAK2D,MAAM,iBAAgB1D,SAEzBqD,EAAKU,MAAM,EAAG,GAAGtF,KAAI,SAAAuF,GACnB,OAAQjE,cAAChC,EAAW,CAClBM,KA7CO,IA8CPG,KAAM+E,EAAWS,GACjB5F,OA9CK,GA+CL0B,OA9CK,KAgDT,QAKR,ECnEAmE,IAASC,OACPnE,cAACoE,IAAMC,WAAU,CAAApE,SACfD,cAACqD,EAAG,MAENiB,SAASC,eAAe,Q","file":"static/js/main.7ef3e41c.chunk.js","sourcesContent":["import React, { useRef, useEffect} from \"react\";\nimport * as d3 from \"d3\";\n\n\n\nconst Scatterplot = (props) => {\n\n\tconst splotSvg = useRef(null);\n\tconst svgSize = props.margin * 2 + props.size;\n\n\tuseEffect(() => {\n\t\t//dataset\n\t\tlet datasetX = props.data.map(d => parseFloat(d[0]));\n\t\tlet datasetY = props.data.map(d => parseFloat(d[1]));\n\n\t\t//define axisX\n\t\tlet linearX = d3.scaleLinear().domain([d3.min(datasetX), d3.max(datasetX)]).range([0, props.size]);\n\t\tlet axisX = d3.axisBottom(linearX);\n\n\t\t//define axisY\n\t\tlet linearY = d3.scaleLinear().domain([d3.min(datasetY), d3.max(datasetY)]).range([props.size, 0]);\n\t\tlet axisY = d3.axisLeft(linearY);\n\n\t\t//append axisX\n\t\tconst svg = d3.select(splotSvg.current);\n\t\tsvg.append(\"g\")\n\t \t\t .attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`)\n\t\t\t .call(axisX)\n\n\t\t//append axisY\n\t\tsvg.append(\"g\")\n\t\t\t .attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\t\t .call(axisY)\n\n\t\t//append dot\n\t\tconst dotSvg = svg.append(\"g\")\n\t\t\t\t\t\t\t\t\t\t\t.attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\tdotSvg.selectAll(\"circle\")\n\t\t\t\t\t.data(props.data)\n\t\t\t\t\t.enter()\n\t\t\t\t\t.append(\"circle\")\n\t\t\t\t\t.attr(\"class\", (_,i) => `circle${i}`)\n\t\t\t\t\t.attr(\"r\", props.radius)\n\t\t\t\t\t.attr(\"cx\", d => linearX(d[0]))\n\t\t\t\t\t.attr(\"cy\", d => linearY(d[1]))\n\t\t\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<svg ref={splotSvg} width={svgSize} height={svgSize}> \n\t\t\t</svg>\n\t\t</div>\n\t)\n};\n\nexport default Scatterplot;","import React, { useRef, useEffect} from \"react\";\nimport * as d3 from \"d3\";\n\n\n\nconst Mainplot = (props) => {\n\n\tconst splotSvg = useRef(null);\n  const barplotSvg = useRef(null);\n  const svgSize = props.margin * 2 + props.size;\n\t// data mean & deviation\n\tconst dataMean = [d3.mean(props.data.map(d => parseFloat(d[0]))),d3.mean(props.data.map(d => parseFloat(d[1])))];\n\tconst dataDev = [d3.deviation(props.data.map(d => parseFloat(d[0]))),d3.deviation(props.data.map(d => parseFloat(d[1])))];\n\t//barColor\n\tconst barColor = [\"#fff1ac\",\"#d5a4cf\"];\n\n\tlet barSvg, ySvg, lineSvg;\n\n\t//dino plot\n\tuseEffect(() => {\n\t\t//dataset\n\t\tlet datasetX = props.data.map(d => parseFloat(d[0]));\n\t\tlet datasetY = props.data.map(d => parseFloat(d[1]));\n\n\t\t//define axisX\n\t\tlet linearX = d3.scaleLinear().domain([d3.min(datasetX), d3.max(datasetX)]).range([0, props.size]);\n\t\tlet axisX = d3.axisBottom(linearX);\n\n\t\t//define axisY\n\t\tlet linearY = d3.scaleLinear().domain([d3.min(datasetY), d3.max(datasetY)]).range([props.size, 0]);\n\t\tlet axisY = d3.axisLeft(linearY);\n\n\t\t//append axisX\n\t\tconst svg = d3.select(splotSvg.current);\n\t\tsvg.append(\"g\")\n\t \t\t .attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`)\n\t\t\t .call(axisX)\n\n\t\t//append axisY\n\t\tsvg.append(\"g\")\n\t\t\t .attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\t\t .call(axisY)\n\n\t\t//append dot\n\t\tconst dotSvg = svg.append(\"g\")\n\t\t\t\t\t\t\t\t\t\t\t.attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\tdotSvg.selectAll(\"circle\")\n\t\t\t\t\t.data(props.data)\n\t\t\t\t\t.enter()\n\t\t\t\t\t.append(\"circle\")\n\t\t\t\t\t.attr(\"class\", (_,i) => `circle${i}`)\n\t\t\t\t\t.attr(\"r\", props.radius)\n\t\t\t\t\t.attr(\"cx\", d => linearX(d[0]))\n\t\t\t\t\t.attr(\"cy\", d => linearY(d[1]))\n\n\n\t\t//append brush\n\t\tconst brush = d3.brush()\n      .extent([[0, 0], [props.size, props.size]])\n      .on(\"start brush end\", brushed)\n\t\t\t//.on(\"start\", cleared);\n\t\tconst brushSvg = svg.append(\"g\")\n\t\t\t\t\t\t\t\t\t\t\t\t.attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\t\t\t\t\t\t\t\t\t\t\t.call(brush)\n\n\t\t// function cleared(){\n\t\t// \td3.selectAll(\"circle\").attr(\"fill\",\"black\");\n\t\t// }\n\n\t\tfunction brushed(event) {\n    let selection = event.selection;\n\t\t\n\t\t// brush none dot\n    if (selection == null) {\n      d3.selectAll(\"circle\").attr(\"fill\", \"black\");\n\t\t\tbarUpdate(dataMean,dataDev);\n      return;\n    }\n\t\tlet [[x0, y0],[x1, y1]] = selection;\n\t\t//in section\n\t\tconst databrushed = props.data.map((d, i)=>{\n\t\t\tconst dataTX = linearX(parseFloat(d[0]));\n\t\t\tconst dataTY = linearY(parseFloat(d[1]));\n\t\t\tif(x0 <= dataTX && dataTX <= x1 && y0 <= dataTY && dataTY <= y1\n\t\t\t\t)return true;\n\t\t\telse return false;\t\n\t\t});\n\t\tconst inSectionId = databrushed.reduce((acc, cur, i) => {\n\t\t\tif (cur) acc.push(i);\n\t\t\treturn acc;\n\t\t}, [])\n\t\td3.selectAll(\"circle\").attr(\"fill\",\"black\");\n\t\t// set section color\n\t\tinSectionId.forEach(e =>{\n\t\t\td3.selectAll(`.circle${e}`)\n\t\t\t\t.attr(\"fill\",\"red\");\n\t\t} )\n\t\t// brush update\n\t\tif( inSectionId.length === 0 || inSectionId.length === 1){\n\t\t\tbarUpdate(dataMean,dataDev);\n\t\t}else\n\t\t{\n\t\t\tconst sectionDataMean = [d3.mean(inSectionId.map(id => parseFloat(props.data[id][0]))),d3.mean(inSectionId.map(id => parseFloat(props.data[id][1])))];\n\t\t\tconst sectionDataDev = [d3.deviation(inSectionId.map(i => parseFloat(props.data[i][0]))),d3.deviation(inSectionId.map(i => parseFloat(props.data[i][1])))];\n\t\t\tbarUpdate(sectionDataMean,sectionDataDev);\n\t\t}\n  }\n\t// eslint-disable-next-line\n\t}, []);\n\n\t//bar plot\n\tuseEffect(()=>{\n\t\t//define axisX\n\t\tconst xScale  = d3.scaleBand().domain([0, 1]).range([0, props.size]).align(0.5).padding(props.barPadding);\n\t\tconst tickText  = d3.scaleBand().domain([\"x\", \"y\"]).range([0, props.size]).align(0.5).padding(props.barPadding);\n\t\tlet axisX = d3.axisBottom(tickText);\n\n\t\t//define axisY\n\t\tconst yMax = d3.max([dataMean[0],dataMean[1]]);\n\t\tconst yScale  = d3.scaleLinear().domain([0, yMax]).range([props.size, 0]);\n\t\tlet axisY = d3.axisLeft(yScale);\n\n\t\t//append axisX\n\t\tconst svg = d3.select(barplotSvg.current);\n\t\tconst xSvg = svg.append(\"g\")\n\t \t\t .attr(\"transform\", `translate(${props.margin},${props.size + props.margin})`)\n\t\t\t .call(axisX)\n\n\t\t//append axisY\n\t\tySvg = svg.append(\"g\")\n\t\t\t .attr(\"transform\", `translate(${props.margin},${props.margin})`)\n\t\t\t .call(axisY)\n\n\t\t//append bar\n\t\tbarSvg = svg.append(\"g\")\n\t\t\t\t\t\t\t\t.attr(\"transform\", `translate(${props.margin},${props.margin})`);\n\n\t\tbarSvg.selectAll(\"rect\")\n\t\t\t\t\t.data(dataMean)\n\t\t\t\t\t.enter()\n\t\t\t\t\t.append(\"rect\")\n\t\t\t\t\t.attr(\"width\", xScale.bandwidth())\n          .attr(\"height\", d => props.size - yScale(d))\n\t\t\t\t\t.attr(\"x\", (_,i) => xScale(i))\n\t\t\t\t\t.attr(\"y\",(d,_) => yScale(d))\n\t\t\t\t\t.attr(\"fill\",(_,i)=>barColor[i])\n\n\t\t//append errorbar\n\t\tlineSvg = svg.append(\"g\")\n\t\t\t\t\t\t\t\t .attr(\"transform\", `translate(${props.margin},${props.margin})`);\n\t\t\n\t\tlineSvg.selectAll(\"line\")\n\t\t\t\t\t .data(dataDev)\n\t\t\t\t\t .enter()\n\t\t\t\t\t .append(\"line\")\n\t\t\t\t\t .style(\"stroke\",\"black\")\n\t\t\t\t\t .attr(\"x1\", (d, i) => xScale(i) + xScale.bandwidth() / 2)\n           .attr(\"x2\", (d, i) => xScale(i) + xScale.bandwidth() / 2)\n           .attr(\"y1\", (d, i) => yScale(dataMean[i] + d))\n           .attr(\"y2\", (d, i) => yScale(dataMean[i] - d))\n\n\t},[])\n\n\t// update barplot\n\tfunction barUpdate(updateMean, updateDev){\n\t\t//define axisY\n\t\tconst yMax = d3.max(updateMean);\n\t\tconst yScale = d3.scaleLinear().domain([0, yMax]).range([props.size, 0]);\n\t\tlet axisY = d3.axisLeft(yScale);\n\t\n\t\t//append axisY\n\t\tySvg.call(axisY)\n\t\t\n\t\tbarSvg.selectAll(\"rect\")\n\t\t\t\t\t.data(updateMean)\n\t\t\t\t\t.join()\n\t\t\t\t\t.transition()\n\t\t\t\t\t.duration(10)\n\t\t\t\t\t.attr(\"y\",d => yScale(d))\n\t\t\t\t\t.attr(\"height\",d => {\n\t\t\t\t\t\treturn props.size - yScale(d);});\n\n\t\tlineSvg.selectAll(\"line\")\n\t\t\t\t\t .data(updateDev)\n\t\t\t\t\t .join()\n\t\t\t\t\t .transition()\n\t\t\t\t\t .duration(60)\n\t\t\t\t\t .style(\"stroke\",\"black\")\n           .attr(\"y1\", (d, i) => yScale(updateMean[i] + d))\n           .attr(\"y2\", (d, i) => yScale(updateMean[i] - d))\n\t\t\t\n\t\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<svg ref={splotSvg} width={svgSize} height={svgSize}> \n\t\t\t</svg>\n      <svg ref={barplotSvg} width={svgSize} height={svgSize}> \n\t\t\t</svg>\n\n\t\t</div>\n\t)\n};\n\nexport default Mainplot;","import React from \"react\";\nimport Scatterplot from \"./components/Scatterplot\";\nimport Mainplot from \"./components/Mainplot\";\n\nimport datasaurus from \"./data/datasaurus.json\";\n\nimport \"./App.css\";\n\n\nfunction App() {\n\n  const name = \"Guangjing Yan\"\n  const studentNum = \"2020-2XXXX\"\n\n\n  const mainWidth = 200;\n  const subWidth = 150;\n  const margin = 20;\n  const radius = 1.5;\n  const barPadding = 0.3\n\n  let keys = Object.keys(datasaurus);\n  keys = keys.filter(d => d !== \"dino\");\n\n\n\n  return (\n    <div className=\"App\">\n      <div class=\"splotContainer\">\n        <h1 style={{marginRight: 10}}>\n        {\"Assignment #1 /\"}\n        </h1>\n        <h2 style={{marginTop: 25}}>\n          {name + \" (\" + studentNum + \")\"}\n        </h2>\n      </div>\n      <div class=\"splotContainer\">\n        <Mainplot\n          size={mainWidth}\n          data={datasaurus.dino}\n          margin={margin}\n          radius={radius}\n          barPadding={barPadding}\n        />\n      </div>\n      <div class=\"splotContainer\">\n      {\n        keys.slice(0, 4).map(key => { \n          return (<Scatterplot\n            size={subWidth}\n            data={datasaurus[key]}\n            margin={margin}\n            radius={radius}\n          />)\n        })\n      }\n      </div>\n      <div class=\"splotContainer\">\n      {\n        keys.slice(4, 8).map(key => { \n          return (<Scatterplot\n            size={subWidth}\n            data={datasaurus[key]}\n            margin={margin}\n            radius={radius}\n          />)\n        })\n      }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}